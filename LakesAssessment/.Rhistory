statement<- paste("\"insert into test(pk) values",test,";\"")
statement<- paste("'\"insert into test(pk) values",test,";\"'")
statement
SQL<- statement
out <-  capture.output(ssh_exec_wait(session,command=paste(conn,SQL,sep='')))
statement<- paste("'\"insert into test(pk) values",test,";\"'",sep="")
SQL<- statement
out <-  capture.output(ssh_exec_wait(session,command=paste(conn,SQL,sep='')))
session<- ssh_connect("sftp@eco.cs.hartford.edu:22",verbose=2)
conn <- 'mysql --user=flow_user --password=water97$ flow_observation -e'
test<- "(70),(71),(73)"
statement<- paste("'\"insert into test(pk) values",test,";\"'",sep="")
SQL<- statement
out <-  capture.output(ssh_exec_wait(session,command=paste(conn,SQL,sep='')))
statement
statement<- paste("'"insert into test(pk) values ",test,";"'",sep="")
statement<- paste("\'\"insert into test(pk) values ",test,";\"\'",sep="")
statement
statement<- paste("\"insert into test(pk) values ",test,";\"",sep="")
statement
ssh_disconnect(session)
statement
statement<- paste("\"insert into test(pk) values ",test,";\"",sep="")
statement
cat(statement)
statement<- paste("\'\"insert into test(pk) values ",test,";\"\'",sep="")
statement<-cat(statement)
statement
statement<- paste("\'\"insert into test(pk) values ",test,";\"\'",sep="")
statement
statement<-cat(statement)
statement<- paste("\'\"insert into test(pk) values ",test,";\"\'",sep="")
SQL<- cat(statement)
SQL
statement<- cat(paste("\'\"insert into test(pk) values ",test,";\"\'",sep=""))
statement
statement<- paste("\'\"insert into test(pk) values ",test,";\"\'",sep="")
statement
statement<- paste("\"insert into test(pk) values ",test,";\"",sep="")
statement
statement<- paste("\"insert into test(pk) values ",test,";\"",sep="")
statement<- paste0("\"insert into test(pk) values ",test,";\"")
statement
print(statement)
cat(statement)
statement<- paste0("insert into test(pk) values ",test,";"")
statement<- paste0("\'"insert into test(pk) values ",test,";"'\"")
statement<- paste0("'\"insert into test(pk) values ",test,";\"'"")
statement<- paste0("\"insert into test(pk) values ",test,";"\"")
statement<- paste0("\"insert into test(pk) values ",test,";\"")
statement
statement<-gsub("\\","")
statement<-gsub("\\","",statement)
statement<- as.list(paste0("\"insert into test(pk) values ",test,";\""))
statemetn
statement
statement<- as.list(paste0("'\"insert into test(pk) values ",test,";\"'"))
statement
statement<- paste0("\"insert into test(pk) values ",test,";\"")
print(statement)
cat(statement)
gsub("[\r\n]", "", statement)
SQL<- statement
library(ssh)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22",verbose=2)
conn <- 'mysql --user=flow_user --password=water97$ flow_observation -e'
test<- "(70),(71),(73)"
statement<- paste0("\"insert into test(pk) values ",test,";\"")
SQL<- statement
ssh_disconnect(session)
library(ssh)
session<- ssh_connect("sftp@eco.cs.hartford.edu:22",verbose=2)
conn <- 'mysql --user=flow_user --password=water97$ flow_observation -e'
test<- "(70),(71),(73)"
statement<- paste0("\"insert into test(pk) values ",test,";\"")
SQL<- statement
out <-  capture.output(ssh_exec_wait(session,command=paste(conn,SQL,sep='')))
SQL <-   '"select * from test;"'
out <-  capture.output(ssh_exec_wait(session,command=paste(conn,SQL,sep='')))
ssh_disconnect(session)
library(RSQLite)
library(plyr)
library(ggplot2)
library(lubridate)
#open ODBC
db_path <- 'S:/M_Kozlak/Temperature/TemperatureDB/' #on windows like this
db <- dbConnect(SQLite(), dbname=paste(db_path,"stream.temperature.sqlite",sep=''));
##Query with Field Flags and put into R data.fram and native R types
SELECTflag<- "SELECT probe_temps.ProbeID, probe_temps.SID, probe_temps.Date_Time, probe_temps.Temp, probe_temps.UOM, probe_temps.Collector, probe_temps.ProbeType, fieldflag.DateStart, fieldflag.DateEnd, fieldflag.COMMENT
FROM probe_temps
LEFT JOIN fieldflag ON probe_temps.ProbeID = fieldflag.ProbeID AND probe_temps.SID = fieldflag.SID AND probe_temps.Date_Time >= fieldflag.DateStart AND probe_temps.Date_Time <= fieldflag.DateEnd"
#query/look at data as an R data.frame and native R types<<<<<<<<<<<<<<<<
#look at some data
#names  <- dbListTables(db);                        # The tables in the database
#fields <- dbListFields(db, "probe_temps");    # The columns in a table
#table  <- dbReadTable(db, "probe_temps");  # get the whole table as a data.frame
#Summarize data by day
table$day <- substr(table$Date_Time,6,10)##Add column of data that includes month_day
table$month<- substr(table$Date_Time,6,7)##Add column of data that includes month
table$year<- substr(table$Date_Time,1,4)##Add column of data that includes year
table$date<-ymd_hms(table$Date_Time)
library(RSQLite)
library(plyr)
library(ggplot2)
library(lubridate)
#open ODBC
db_path <- 'S:/M_Kozlak/Temperature/TemperatureDB/' #on windows like this
db <- dbConnect(SQLite(), dbname=paste(db_path,"stream.temperature.sqlite",sep=''));
##Query with Field Flags and put into R data.fram and native R types
SELECTflag<- "SELECT probe_temps.ProbeID, probe_temps.SID, probe_temps.Date_Time, probe_temps.Temp, probe_temps.UOM, probe_temps.Collector, probe_temps.ProbeType, fieldflag.DateStart, fieldflag.DateEnd, fieldflag.COMMENT
FROM probe_temps
LEFT JOIN fieldflag ON probe_temps.ProbeID = fieldflag.ProbeID AND probe_temps.SID = fieldflag.SID AND probe_temps.Date_Time >= fieldflag.DateStart AND probe_temps.Date_Time <= fieldflag.DateEnd"
table<- dbGetQuery(db,SELECTflag)
table$day <- substr(table$Date_Time,6,10)##Add column of data that includes month_day
table$month<- substr(table$Date_Time,6,7)##Add column of data that includes month
table$year<- substr(table$Date_Time,1,4)##Add column of data that includes year
table$date<-ymd_hms(table$Date_Time)
dbDisconnect(db);
yrCol<- unique(table[,c('year','Collector')])
for (n in 1:dim(yrCol)[1]){
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N==24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N==24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
write.csv(TempMetrics,paste0("S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics",yrCol[n,2],yrCol[n,1],".csv"),row.names=FALSE)
}
for (n in 1:dim(yrCol)[1]){
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N==24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N==24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
write.csv(TempMetrics,paste0("S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics",yrCol[n,2],yrCol[n,1],".csv"),row.names=FALSE)
}
AvgDay[1:10,]
length(unique(AvgDay$SID))
length(unique(Avgday[,c('SID','N')]))
length(unique(AvgDay[,c('SID','N')]))
AvgDay[,c('SID','N')]
AvgDay[N<24,]
AvgDay[AvgDay$N<24,]
unique(AvgSummerTemp$SID)
length(unique(AvgSummerTemp$SID))
length(unique(AvgJulyTemp$SID))
length(unique(MaxDailyTemp$SID))
unique(SummerMonths$SID)
AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N<24,]
dim(AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N<24,])
dim(AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N==24,])
dim(AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08',])
View(SummerMonths)
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N>=24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
unique(SummerMonths$SID)
dim(unique(SummerMonths$SID))
length(unique(SummerMonths$SID))
July<- AvgDay[AvgDay$month=='07'& AvgDay$N>=24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
length(unique(July$SID))
write.csv(AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08',],"SummerTemp2018.csv")
write.csv(AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08',],"S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/SummerTemp2018.csv")
yrCol<- unique(table[,c('year','Collector')])
#dim(yrCol)[1]
for (n in 1:dim(yrCol)[1]){
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N>=24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N>=24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
write.csv(TempMetrics,paste0("S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics",yrCol[n,2],yrCol[n,1],".csv"),row.names=FALSE)
}
library(RSQLite)
library(plyr)
library(ggplot2)
library(lubridate)
#open ODBC
db_path <- 'S:/M_Kozlak/Temperature/TemperatureDB/' #on windows like this
db <- dbConnect(SQLite(), dbname=paste(db_path,"stream.temperature.sqlite",sep=''));
##Query with Field Flags and put into R data.fram and native R types
SELECTflag<- "SELECT probe_temps.ProbeID, probe_temps.SID, probe_temps.Date_Time, probe_temps.Temp, probe_temps.UOM, probe_temps.Collector, probe_temps.ProbeType, fieldflag.DateStart, fieldflag.DateEnd, fieldflag.COMMENT
FROM probe_temps
LEFT JOIN fieldflag ON probe_temps.ProbeID = fieldflag.ProbeID AND probe_temps.SID = fieldflag.SID AND probe_temps.Date_Time >= fieldflag.DateStart AND probe_temps.Date_Time <= fieldflag.DateEnd"
table<- dbGetQuery(db,SELECTflag)
#query/look at data as an R data.frame and native R types<<<<<<<<<<<<<<<<
#look at some data
#names  <- dbListTables(db);                        # The tables in the database
#fields <- dbListFields(db, "probe_temps");    # The columns in a table
#table  <- dbReadTable(db, "probe_temps");  # get the whole table as a data.frame
#Summarize data by day
table$day <- substr(table$Date_Time,6,10)##Add column of data that includes month_day
table$month<- substr(table$Date_Time,6,7)##Add column of data that includes month
table$year<- substr(table$Date_Time,1,4)##Add column of data that includes year
table$date<-ymd_hms(table$Date_Time)
dbDisconnect(db);
TempMetricsAll<-data.frame(c("SID","SummerTemp","SN","TempCatS","JulyTemp","JN","TempCatJ","MaxD"
"MN","TempCatM","Max24.9","Max27","Flag","Year","Collector"))
TempMetricsAll<-data.frame(1,c("SID","SummerTemp","SN","TempCatS","JulyTemp","JN","TempCatJ","MaxD"
"MN","TempCatM","Max24.9","Max27","Flag","Year","Collector"))
TempMetricsAll<-data.frame(c("SID","SummerTemp","SN","TempCatS","JulyTemp","JN","TempCatJ","MaxD",
"MN","TempCatM","Max24.9","Max27","Flag","Year","Collector"))
names(TempMetricsAll)
TempMetricsAll
TempMetricsAll<-data.frame(1,c("SID","SummerTemp","SN","TempCatS","JulyTemp","JN","TempCatJ","MaxD",
"MN","TempCatM","Max24.9","Max27","Flag","Year","Collector"))
TempMetricsAll
TempMetricsAll<-data.frame(1:15)
TempMetricsAll
TempMetricsAll<-data.frame(1,1:15)
TempMetricsAll
library(RSQLite)
library(plyr)
library(ggplot2)
library(lubridate)
#open ODBC
db_path <- 'S:/M_Kozlak/Temperature/TemperatureDB/' #on windows like this
db <- dbConnect(SQLite(), dbname=paste(db_path,"stream.temperature.sqlite",sep=''));
##Query with Field Flags and put into R data.fram and native R types
SELECTflag<- "SELECT probe_temps.ProbeID, probe_temps.SID, probe_temps.Date_Time, probe_temps.Temp, probe_temps.UOM, probe_temps.Collector, probe_temps.ProbeType, fieldflag.DateStart, fieldflag.DateEnd, fieldflag.COMMENT
FROM probe_temps
LEFT JOIN fieldflag ON probe_temps.ProbeID = fieldflag.ProbeID AND probe_temps.SID = fieldflag.SID AND probe_temps.Date_Time >= fieldflag.DateStart AND probe_temps.Date_Time <= fieldflag.DateEnd"
table<- dbGetQuery(db,SELECTflag)
#query/look at data as an R data.frame and native R types<<<<<<<<<<<<<<<<
#look at some data
#names  <- dbListTables(db);                        # The tables in the database
#fields <- dbListFields(db, "probe_temps");    # The columns in a table
#table  <- dbReadTable(db, "probe_temps");  # get the whole table as a data.frame
#Summarize data by day
table$day <- substr(table$Date_Time,6,10)##Add column of data that includes month_day
table$month<- substr(table$Date_Time,6,7)##Add column of data that includes month
table$year<- substr(table$Date_Time,1,4)##Add column of data that includes year
table$date<-ymd_hms(table$Date_Time)
dbDisconnect(db);
class(table)
class(table$SID)
TempMetricsAll<-(SID=character(),SummerTemp=numeric(),SN=numeric(),TempCatS=character(),JulyTemp=numeric(),JN=numeric(),
TempCatJ=character(),MaxD=numeric(),MN=numeric(),TempCatM=character(),
Max24.9=numeric(),Max27=numeric(),Flag=numeric(),Year=character(),Collector=character())
TempMetricsAll<-(SID=character(),SummerTemp=numeric(),SN=numeric(),TempCatS=character(),JulyTemp=numeric(),JN=numeric(),
TempCatJ=character(),MaxD=numeric(),MN=numeric(),TempCatM=character(),
Max24.9=numeric(),Max27=numeric(),Flag=numeric(),Year=character(),Collector=character())
TempMetricsAll<-data.frame(SID=character(),SummerTemp=numeric(),SN=numeric(),TempCatS=character(),JulyTemp=numeric(),JN=numeric(),
TempCatJ=character(),MaxD=numeric(),MN=numeric(),TempCatM=character(),
Max24.9=numeric(),Max27=numeric(),Flag=numeric(),Year=character(),Collector=character())
TempMetricsAll
n<-1
SummerMonthCnt<-table[table$month=='06'|table$month=='07'|table$month=='08',]
yrCol<- unique(SummerMonthCnt[,c('year','Collector')])
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
MaxDay<- ddply(temp,c("SID","day","month","year"),summarize,max=max(Temp),N=length(Temp))#MaxOnAGivenDay
MaxDay$d<-as.numeric(substr(MaxDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N>=24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N>=24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##N Days >= 24.9 degree C and N Days >= 27 May 1 - Sept 15##
MaxDates<- MaxDay[MaxDay$month=='05'|MaxDay$month=='06'|MaxDay$month=='07'|MaxDay$month=='08'|
(MaxDay$month=='09' & MaxDay$d<=15),]
MaxDates$MaxTemp24.9<- ifelse(MaxDates$max>=24.9,1,0)
MaxDates$MaxTemp27<- ifelse(MaxDates$max>=27,1,0)
MaxGreaterThanTemp<-ddply(MaxDates,"SID",summarize,Max24.9=sum(MaxTemp24.9),Max27=sum(MaxTemp27))
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxGreaterThanTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
TempMetrics$Year<-yrCol[n,1]
TempMetrics$Collector<-yrCol[n,2]
TempMetricsAll<-rbind(TempMetricsAll,TempMetrics)
TempMetricsAll
TempMetricsAll[1:10,]
dim(TempMetricsAll)
TempMetricsAll<-data.frame(SID=character(),SummerTemp=numeric(),SN=numeric(),TempCatS=character(),JulyTemp=numeric(),JN=numeric(),
TempCatJ=character(),MaxD=numeric(),MN=numeric(),TempCatM=character(),
Max24.9=numeric(),Max27=numeric(),Flag=numeric(),Year=character(),Collector=character())
SummerMonthCnt<-table[table$month=='06'|table$month=='07'|table$month=='08',]
yrCol<- unique(SummerMonthCnt[,c('year','Collector')])
for (n in 1:dim(yrCol)[1]){
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
MaxDay<- ddply(temp,c("SID","day","month","year"),summarize,max=max(Temp),N=length(Temp))#MaxOnAGivenDay
MaxDay$d<-as.numeric(substr(MaxDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N>=24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N>=24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##N Days >= 24.9 degree C and N Days >= 27 May 1 - Sept 15##
MaxDates<- MaxDay[MaxDay$month=='05'|MaxDay$month=='06'|MaxDay$month=='07'|MaxDay$month=='08'|
(MaxDay$month=='09' & MaxDay$d<=15),]
MaxDates$MaxTemp24.9<- ifelse(MaxDates$max>=24.9,1,0)
MaxDates$MaxTemp27<- ifelse(MaxDates$max>=27,1,0)
MaxGreaterThanTemp<-ddply(MaxDates,"SID",summarize,Max24.9=sum(MaxTemp24.9),Max27=sum(MaxTemp27))
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxGreaterThanTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
TempMetrics$Year<-yrCol[n,1]
TempMetrics$Collector<-yrCol[n,2]
TempMetricsAll<-rbind(TempMetricsAll,TempMetrics)
#write.csv(TempMetrics,"S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics.csv",append=TRUE,row.names=FALSE)
#write.csv(TempMetrics,paste0("S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics",yrCol[n,2],yrCol[n,1],".csv"),row.names=FALSE)
}
dim(TempMetricsAll)
TempMetricsAll[500:550,]
TempMetricsAll[1000:1050,]
TempMetricsAll[900:950,]
library(RSQLite)
library(plyr)
library(ggplot2)
library(lubridate)
#open ODBC
db_path <- 'S:/M_Kozlak/Temperature/TemperatureDB/' #on windows like this
db <- dbConnect(SQLite(), dbname=paste(db_path,"stream.temperature.sqlite",sep=''));
##Query with Field Flags and put into R data.fram and native R types
SELECTflag<- "SELECT probe_temps.ProbeID, probe_temps.SID, probe_temps.Date_Time, probe_temps.Temp, probe_temps.UOM, probe_temps.Collector, probe_temps.ProbeType, fieldflag.DateStart, fieldflag.DateEnd, fieldflag.COMMENT
FROM probe_temps
LEFT JOIN fieldflag ON probe_temps.ProbeID = fieldflag.ProbeID AND probe_temps.SID = fieldflag.SID AND probe_temps.Date_Time >= fieldflag.DateStart AND probe_temps.Date_Time <= fieldflag.DateEnd"
table<- dbGetQuery(db,SELECTflag)
#query/look at data as an R data.frame and native R types<<<<<<<<<<<<<<<<
#look at some data
#names  <- dbListTables(db);                        # The tables in the database
#fields <- dbListFields(db, "probe_temps");    # The columns in a table
#table  <- dbReadTable(db, "probe_temps");  # get the whole table as a data.frame
#Summarize data by day
table$day <- substr(table$Date_Time,6,10)##Add column of data that includes month_day
table$month<- substr(table$Date_Time,6,7)##Add column of data that includes month
table$year<- substr(table$Date_Time,1,4)##Add column of data that includes year
table$date<-ymd_hms(table$Date_Time)
TempMetricsAll<-data.frame(SID=character(),SummerTemp=numeric(),SN=numeric(),TempCatS=character(),JulyTemp=numeric(),JN=numeric(),
TempCatJ=character(),MaxD=numeric(),MN=numeric(),TempCatM=character(),
Max24.9=numeric(),Max27=numeric(),Flag=numeric(),Year=character(),Collector=character())
SummerMonthCnt<-table[table$month=='06'|table$month=='07'|table$month=='08',]
yrCol<- unique(SummerMonthCnt[,c('year','Collector')])
for (n in 1:dim(yrCol)[1]){
temp <- table[which(table$Collector==yrCol[n,2] & table$year==yrCol[n,1]),]##Subset by Year and Collector
AvgDay <- ddply(temp,c("SID","day","month","year"),summarize,mean=mean(Temp),N=length(Temp))#AvgByDay
AvgDay$day<-as.numeric(substr(AvgDay$day,4,5))
MaxDay<- ddply(temp,c("SID","day","month","year"),summarize,max=max(Temp),N=length(Temp))#MaxOnAGivenDay
MaxDay$d<-as.numeric(substr(MaxDay$day,4,5))
##Avg Summer Temp##
SummerMonths <- AvgDay[AvgDay$month=='06'|AvgDay$month=='07'|AvgDay$month=='08'&AvgDay$N>=24,]
AvgSummerTemp <- ddply(SummerMonths,"SID",summarize,SummerTemp=mean(mean),SN=length(mean))#Summer Temp Month
AvgSummerTemp$TempCatS <- AvgSummerTemp$SummerTemp
AvgSummerTemp$TempCatS<- as.character(AvgSummerTemp$TempCat)
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp<18.29]<-"Cold"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>21.7]<-"Warm"
AvgSummerTemp$TempCatS[AvgSummerTemp$SummerTemp>=18.29&AvgSummerTemp$SummerTemp<=21.7]<-"Cool"
##Avg July Temp##
July<- AvgDay[AvgDay$month=='07'& AvgDay$N>=24,]
AvgJulyTemp <- ddply(July,"SID",summarize,JulyTemp=mean(mean),JN=length(mean))#Summer Temp Month
AvgJulyTemp$TempCatJ <- AvgJulyTemp$JulyTemp
AvgJulyTemp$TempCatJ<- as.character(AvgJulyTemp$TempCat)
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp<18.45]<-"Cold"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>22.30]<-"Warm"
AvgJulyTemp$TempCatJ[AvgJulyTemp$JulyTemp>=18.45&AvgJulyTemp$JulyTemp<=22.30]<-"Cool"
##Max Daily Mean##
MaxDailyTemp <- ddply(AvgDay,"SID",summarize,MaxD = max(mean),MN=length(mean))
MaxDailyTemp$TempCatM <- MaxDailyTemp$MaxD
MaxDailyTemp$TempCatM <- as.character(MaxDailyTemp$MaxD)
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD<22.4]<- "Cold"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>26.3]<- "Warm"
MaxDailyTemp$TempCatM [MaxDailyTemp$MaxD>=22.4&MaxDailyTemp$MaxD<=26.3]<- "Cool"
##N Days >= 24.9 degree C and N Days >= 27 May 1 - Sept 15##
MaxDates<- MaxDay[MaxDay$month=='05'|MaxDay$month=='06'|MaxDay$month=='07'|MaxDay$month=='08'|
(MaxDay$month=='09' & MaxDay$d<=15),]
MaxDates$MaxTemp24.9<- ifelse(MaxDates$max>=24.9,1,0)
MaxDates$MaxTemp27<- ifelse(MaxDates$max>=27,1,0)
MaxGreaterThanTemp<-ddply(MaxDates,"SID",summarize,Max24.9=sum(MaxTemp24.9),Max27=sum(MaxTemp27))
##Combine and Export Metrics By Year
TempMetrics <- merge(AvgSummerTemp,AvgJulyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxDailyTemp,by="SID")
TempMetrics <-merge(TempMetrics,MaxGreaterThanTemp,by="SID")
TempMetrics$Flag [TempMetrics$SN<92|TempMetrics$JN <31] <- 1
TempMetrics$Year<-yrCol[n,1]
TempMetrics$Collector<-yrCol[n,2]
TempMetricsAll<-rbind(TempMetricsAll,TempMetrics)
#write.csv(TempMetrics,"S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics.csv",append=TRUE,row.names=FALSE)
#write.csv(TempMetrics,paste0("S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetrics",yrCol[n,2],yrCol[n,1],".csv"),row.names=FALSE)
}
write.csv(TempMetricsAll,"TempMetricsAllSamples.csv",row.names=FALSE)
write.csv(TempMetricsAll,"S:/M_Kozlak/Temperature/TemperatureDB/MetricCalcs/TempMetricsAllSamples.csv",row.names=FALSE)
setwd("P:/Projects/GitHub_Prj/Lakes/LakesAssessment/LakesAssessmentCalc")
library(ggplot2)
library(ggplot2)
update.packages(checkBuilt=TRUE, ask=FALSE)
